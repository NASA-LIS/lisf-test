C ------------    FROZEN GROUND VERSION SUBROUTINES    -----------------
C     NEW SUBROUTINES/FUNCTIONS WERE ADDED:
C       - SNKSRC:    SINK/SORCE TERM CALCULATION
C       - FRH2O:     ESTIMATION UNFROZEN WATER IF T < 0
C       - FRZCND:    ADJUSTMENT OF TERMAL CONDUCTIVITY TO ACCOUNT
C                    FOR FROZEN GROUND
C       - TBND:      LAYER BOUNDARY TEMPERATURE CALCULATION
C       - GF:        GAMMA FUNCTION 
C       - CSNOW:     SNOW CONDUCTIVITY CALCULATING
C       - SNOWPACK:  SNOW COMPACTION
C       - SNOW_NEW:  DENSITY OF NEW SNOWFALL COVER
c       - smc0:	     default residue water content   
C ----------------------------------------------------------------------


      FUNCTION SNKSRC ( TUP,TM,TDN, SMC, SH2O, HCPCT, ZSOIL,
     +         SMCMAX, PSISAT, B, DT, K,STYPE,QUARTZ,IVERS,CK,smc0) 
     
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CC    PURPOSE:  TO CALCULATE SINK/SOURCE TERM OF THE TERMAL DIFFUSION
CC    =======   EQUATION. (SH2O) IS AVAILABLE LIQUED WATER.
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

      REAL SMC, SH2O   
      REAL ZSOIL (*)
      
      PARAMETER (HLICE=3.335 E5)
      PARAMETER (DH2O=1000.)
      PARAMETER (T0=273.16)
      
C  **************************************************************************
C  ***  OPTION TO RUN NON-FROZEN VERSION:  UNCOMMENT NEXT TWO STATEMENTS ****
C  *******************        WARNING !!!!!        **************************  
C  ***  TO RUN FROZEN GROUND VERSION, NEXT TWO STATEMENTS SHOULD BE      ****
C  ***  COMMENTED                                                        **** 
C
CC      SNKSRC = 0.0
CC      GOTO 77
C  ************************************************************************** 

C12/02  V.K.  CHANGED TO AUTOMATICALLY SWITCH HEAT BALANCE CALCULATIONS:
C             IF IVERS .EQ. 4, WITHOUT FREEZING OF SOIL MOISTURE
C             IF IVERS .NE. 4, WITH FREEZING OF SOIL MOISTURE
        IF(IVERS .EQ. 4) THEN
         SNKSRC = 0.0
         GOTO 77
        ENDIF
         
      SICE=SMC-SH2O      
      IF(K.EQ.1) THEN
        DZ=-ZSOIL(1)
c3/10 surfwater
        SICE=0.0
      ELSE
        DZ=ZSOIL(K-1)-ZSOIL(K)
      ENDIF

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C  CALCULATE DIFFUSIVITIES OF THAWED AND FROZEN GROUND
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

c3/10 surfwater
      if(k .eq. 1) then
       DFH2O=CND_JOHNS(STYPE,SMC0,0.,SMCMAX,QUARTZ)
      else 
       DFH2O=CND_JOHNS(STYPE,SMC,0.,SMCMAX,QUARTZ)
      endif 
      DFICE = DFH2O
      IF(SICE .GT. 0.) DFICE=CND_JOHNS(STYPE,SH2O,SICE,SMCMAX,QUARTZ)
CC      CALL TDFCND ( DFH2O, SMC, B, F1 )
CC      DFICE = DFH2O
CC      IF ( SICE .GT. 0.0 ) CALL FRZCND ( DFICE, SICE )

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C  HEAT FLUX FROM THE TOP BONDARY OF LAYER
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      
      IF(TUP .LE. T0) THEN
        DF=DFICE
      ELSE
        DF=DFH2O
      ENDIF
      QUP=-DF*(T0-TUP)/(0.5*DZ)
      
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C  HEAT FLUX FROM THE BOTTOM BONDARY OF LAYER
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

      IF(TDN .LE. T0) THEN
        DF=DFICE
      ELSE
        DF=DFH2O
      ENDIF
      QDN=-DF*(T0-TDN)/(0.5*DZ)
      QTOT=QUP+QDN

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C     CALCULATE POTENTIAL REDUCTION OF LIQUED WATER CONTENT
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      
      XH2O=QTOT*DT/(DH2O*HLICE*DZ) + SH2O
            
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C     ESTIMATE UNFROZEN WATER AT TEMPERATURE TAVG,
C     AND CHECK IF CALCULATED WATER CONTENT IS REASONABLE 
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC 

      TAVG=ST_AVG1(TUP,TM,TDN,DZ)        

100   FREE=FRH2O_356(TAVG, SMC, SH2O, SMCMAX, B, PSISAT, CK )

      IF ( XH2O .LT. SH2O .AND. XH2O .LT. FREE) THEN 
         IF ( FREE .GT. SH2O ) THEN
              XH2O = SH2O
          ELSE
              XH2O = FREE
          ENDIF
      ENDIF
              
      IF ( XH2O .GT. SH2O .AND. XH2O .GT. FREE )  THEN
         IF ( FREE .LT. SH2O ) THEN
              XH2O = SH2O
          ELSE
              XH2O = FREE
          ENDIF
      ENDIF 
             
      IF(XH2O.LT.0.) XH2O=0.
10    IF(XH2O.GT.SMC) XH2O=SMC

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C     CALCULATE SINK/SOURCE TERM AND REPLACE PREVIOUS WATER CONTENT 
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
     
      SNKSRC=-DH2O*HLICE*DZ*(XH2O-SH2O)/DT

c        if(xh2o.lt.0.) then
c          xh2o=sh2o
c        endif

      SH2O=XH2O
      
77    RETURN
      END
      
      
      FUNCTION GF(Y)  
      H=1  
      X=Y  
 38   IF(X.LE.0.)GO TO 39  
      IF(X.EQ.2.)GO TO 42  
      IF(X.GT.2.)GO TO 40  
      H=H/X  
      X=X+1  
      GO TO 38  
  40  IF(X.LE.3.)GO TO 44  
      X=X-1  
      H=H*X  
      GO TO 38  
  44  X=X-2  
      H=(((((((.0016063118*X+0.0051589951)*X+0.0044511400)*X+.0721101567  
     *)*X+.0821117404)*X+.4117741955)*X+.4227874605)*X+.9999999758)*H  
 42   GF=H  
  39  RETURN  
      END


      FUNCTION FRH2O_356(T,SMC,SH2O,SMCMAX,B,PSIS,CK)

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC      
CC  PURPOSE:  CALCULATE FREE WATER CONTENT IF TEMPERATURE 
CC  =======   IS BELOW 273.16K (T0). 
c
cvk 03/08 Subroutine corrected to reduce a number of iterations 
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

      PARAMETER (HLICE=3.335 E5)      
      PARAMETER (GS = 9.81)
cc      PARAMETER (CK=8)
      PARAMETER (DICE=920.0)
      PARAMETER (DH2O=1000.0)
      PARAMETER (T0=273.16)
      PARAMETER (ERROR=0.005)
cc      COMMON/FRZCNST/ FRST_FACT,CK,ZBOT
cc-      COMMON/FRZCNST/ FRST_FACT,ZBOT      
             
C  ***             LIMITS ON PARAMETER B: B < 5.5              ****
C  ***   SIMULATIONS SHOWED IF B > 5.5 UNFROZEN WATER CONTENT  ****
C  ***   IS NON-REALISTICALLY HIGH AT VERY LOW TEMPERATURES    ****
C******************************************************************
C
       BX = B
       IF ( B .GT. 5.5 ) BX = 5.5
C------------------------------------------------------------------
        
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CC  ASSUMED THAT FREE WATER CONTENT EQUALS ITS VALUE AT TEMPERATURE 
CC  273.11K IN RANGE OF TEMPERATURES 273.11K - 273.16K TO REDUCE
CC  ITERRATIONS PROBLEM IN THIS RANGE
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC      

      TR=T
cvk 03/08      IF(T .GT. 273.11 .AND. T .LE. T0 ) TR=273.11

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C  IF TEMPERATURE ABOVE 273.16K SH2O = SMC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

cvk 03/08      IF(TR .GT. T0) THEN
      IF(TR .GE. T0) THEN
        FRH2O_356=SMC
        GOTO 77
      ENDIF  

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C  CONVERT SOIL MOISTURE VARIABLES INTO %
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
 
      SWL=(SMC-SH2O)*100.
      SMCM=SMCMAX*100.
      SMCC=SMC*100.                       
      
      N=0
cc for test only  ---------------
cc      FRWOiter = -1. 
cc      fk=(((-HLICE/(GS*psis))*((TR-T0)/TR))**(-1/b))*smcmax
cc      frflerch = AMIN1 ( fk, smc )
cc      if(frflerch .lt. 0.) frflerch = 0.02
cc for test only  --------------------
       
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C  START OF ITERRATIONS
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

   10  DF = ( -PSIS*GS/HLICE ) * ( ( 1+CK*SWL*0.01 )**2 ) *
     +      ( SMCM/(SMCC-SWL ) )**BX
        
       DENOM = 2 * CK/( 1+CK*SWL*0.01 )+BX/(SMCC - SWL )
       SWLK = SWL - (1-(TR-T0)/(TR*DF))/DENOM
 
cvk 03/08  Iteration will be performed only with SWLK > 0 & N < 100
      if(swlk .le. 0.0 .or. n .gt. 100) then
c  ***        Flerchinger equation             *******      
       fk=(((-HLICE/(GS*psis))*((TR-T0)/TR))**(-1/b))*smcmax
       FRH2O_356 = AMIN1 ( fk, smc )
       if(FRH2O_356 .lt. 0.) FRH2O_356 = 0.02

cc for test only  ---------------
cc       frflerch=frh2o
cc for test only  ---------------

      else         
       DSWL=ABS(SWLK-SWL)
       SWL=SWLK
       if(swl.ge.smcc) then
cvk 2012        write(*,*) 'WARN2 ',n,swl,smcc,t
        swl=smcc*0.8
        smcc=smcc*0.97
       endif

       N=N+1 
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CC  EXIT IF MORE THAN 100 ITERRATIONS. FREE WATER CONTENT
CC  WILL NOT BE ESTIMATED FROM FLERCHIGER EQ.
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
        
cvk 03/08      IF(N .GT. 900 ) THEN
cvk 03/08        IF(TR . LT. 271.16) THEN
cvk 03/08          SWL = ( SMC-0.02 ) * 100.
cvk 03/08        ELSE
cvk 03/08          SWL=0.
cvk 03/08        ENDIF    
cvk 03/08        GOTO 20
cvk 03/08      ENDIF
        
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CC  END OF ITERRATIONS IF LAST ESTIMATE DIFFERENCE IS LESS THAN 
CC  AN ERROR
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

      IF ( DSWL .GT. ERROR ) GOTO 10
      
cvk 03/08   20 IF(SWL .LT. 0.)  THEN
cvk 03/08        write(*,*) ' SWL < 0. ',SWL
cvk 03/08        SWL=0.
cvk 03/08      ENDIF  

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CC  RECALCULATE ICE CONTENT IN % INTO VOLUMETRIC FREE WATER
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

       FRH2O_356 = AMAX1 ( (SMC - SWL*0.01 ), 0.02 )

cc for test only  ---------------
cc       FRWOiter = AMAX1 ( (SMC - SWL*0.01 ), 0.02 )
cc for test only  ---------------

      endif      

cvk 03/08  ***        Flerchinger equation             *******      
cvk 03/08      fk=(((-HLICE/(GS*psis))*((TR-T0)/TR))**(-1/b))*smcmax
cvk 03/08      FRH2O_356 = AMIN1 ( fk, smc )
cvk 03/08      if(FRH2O_356 .lt. 0.) FRH2O_356 = 0.02
cvk 03/08-----------------------------------------------------

cc for test only  ---------------
cc       write(*,*) frh2o,'Flerch:',frflerch,' Iter:',n,frwoiter
cc for test only  ---------------

   77 CONTINUE
      RETURN
      END      


      FUNCTION TBND (TU, TB, ZSOIL, ZBOT, K, NSOIL)            

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CC   PURPOSE:   CALCULATE TEMPERATURE ON THE BOUNDARY OF THE LAYER
CC   =======    BY INTERPOLATION OF THE MIDDLE LAYER TEMPERATURES
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

      PARAMETER (T0=273.16)
      REAL ZSOIL (*)

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CC   USE SURFACE TEMPERATURE ON THE TOP OF THE FIRST LAYER
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      
      IF(K .EQ. 1) THEN
        ZUP=0.
      ELSE
        ZUP=ZSOIL(K-1)
      ENDIF

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CC   USE DEPTH OF THE CONSTANT BOTTOM TEMPERATURE WHEN INTERPOLATE
CC   TEMPERATURE INTO THE LAST LAYER BOUNDARY
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      
      IF(K .EQ. NSOIL) THEN
        ZB=2.*ZBOT-ZSOIL(K)
      ELSE
        ZB=ZSOIL(K+1)
      ENDIF

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CC   LINEAR INTERPOLATION BETWEEN THE AVERAGE LAYER TEMPERATURES
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      
      TBND=TU+(TB-TU)*(ZUP-ZSOIL(K))/(ZUP-ZB)

      RETURN
      END  
      
      
      SUBROUTINE FRZCND( DF, SICE )
      
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CC    PURPOSE:  TO ADJUST THERMAL CONDUCTIVITY ESTIMATED FOR 
CC    =======   THE UNFROZEN SOIL TO ACCOUNT FOR THE ICE CONDUCTIVITY  
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

       DF = DF * ( 1. + SICE )
       
      RETURN
      END 
         

C     ***   JOHNSON'S METHOD TO CALCULATE SOIL THERMAL 
C     ***   CONDUCTIVITY (FROZEN OR NON-FROZEN)

      FUNCTION CND_JOHNS(S_TYPE,H2O,SICE,SMAX,QUARTZ)
      
      PARAMETER (S_QUARZ=7.7, SKW=0.57, SKICE=2.2)
C     S_QUARZ IS QUARTZ CONDUCTIVITY IN W/M.K
C     SKW IS WATER CONDUCTIVITY IN W/M.K
C     SKICE IS ICE CONDUCTIVITY IN W/M.K
      
C     S_TYPE =
C      11 - NATURAL COARSE
C      12 - NATURAL FINE
C      21 - CRUSHED COARSE
C      22 - CRUSHED FINE

C     DRY CONDUCTIVITY
      S_DENS=(1-SMAX)*2700. 
      IF ( S_TYPE .LT. 20 ) THEN
        DRY=(0.137*S_DENS+64.7)/(2700-0.947*S_DENS)
      ELSE
        DRY=0.39*SMAX**(-2.2)
      ENDIF
      
C     KERSTEN NUMBER

      SR=(H2O+SICE)/SMAX
      if(sr .le. 0.) then
       sker=0.
      else 
       IF ( SICE .EQ. 0.) THEN
        IF ( MOD(S_TYPE,10.) .EQ. 1.) THEN
           SKER=0.7*LOG10(SR)+1.0
        ELSE
           SKER=LOG10(SR)+1.0
        ENDIF
        if(sker .lt. 0.) sker=0.
       ELSE
        SKER=SR
       ENDIF
      endif
      
C     PARTICLE CONDUCTIVITY

      IF( MOD(S_TYPE,10.) .EQ. 1. .AND. QUARTZ .LT. 0.2) THEN
        SK=(S_QUARZ**QUARTZ)*(3.0**(1.-QUARTZ))
      ELSE
        SK=(S_QUARZ**QUARTZ)*(2.0**(1.-QUARTZ))
      ENDIF
      
C     SATURATED CONDUCTIVITY

      IF ( SICE .EQ. 0.) THEN
        SATK=(SK**(1.-SMAX))*(SKW**SMAX)
      ELSE 
        SATK=(SK**(1.-SMAX))*(SKW**H2O)*(SKICE**(SMAX-H2O))
cc        sh2o= (SK**(1.-SMAX))*(SKW**(H2O+SICE))
cc        sks=(SK**(1.-SMAX))*(SKW**H2O)*(SKICE**SICE)
cc        rs=sks/sh2o

      ENDIF                          

C     ACTUAL SOIL THERMAL CONDUCTIVITY

      CND_JOHNS = (SATK-DRY)*SKER + DRY
c        write(*,*) dry,sker,sr,sk,satk,sks

c    Test Rosemount
c        cnd_johns=cnd_johns*0.75      
      
      RETURN
      END


       FUNCTION CSNOW ( DSNOW )
       PARAMETER ( UNIT=0.11631 ) 
                                         
C   ****   SIMULATION OF TERMAL SNOW CONDUCTIVITY                   
C   ****  SIMULATION UNITS OF CSNOW IS CAL/(CM*HR* C) 
C   ****  AND IT WILL BE RETURND IN W/(M* C)
C   ****  BASIC VERSION IS DYACHKOVA EQUATION                                

C *****   Dyachkova equation (1960), for range 0.1-0.4

       C=0.328*10**(2.25*DSNOW)
       CSNOW=UNIT*C

       
C *****    De Vaux equation (1933), in range 0.1-0.6
c       csnow=0.0293*(1.+100.*DSNOW**2)
       
C *****   E. Andersen from Flerchinger
C       csnow=0.021+2.51*DSNOW**2        
                                       
       RETURN                                                      
       END  
       


